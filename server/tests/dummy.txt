//******************** */
// Get a single user
    static getSingleUser(req, res) {
           const findProperty = property_data.find(user => user.id === parseInt(req.params.id, 10));
           if (findProperty) {
               return res.status(200).json({
                     user: findProperty,
                     message: "get a propery",
               });
           }
           return res.status(404).json({
                 message: "Propery not found",
           });
    }
 //******************** */

 static createUser(req, res) {
      const newId = parseInt(property_data.length) + 1;
      const { email,first_name,last_name,password,phonenumber,address,is_admin, body } = req.body;
      const newUser = {
        id: newId,
        email,
        first_name,
        last_name,
        password,
        phonenumber,
        address,
        is_admin,
        body,
        created_at: moment.utc().format()
      };
      users.push(newUser);
      return res.status(200).json({
        message: "created a new user"
      });
    }





     // Test to get single user record
        it("should not get a single user record", (done) => {
             const id = 5;
             chai.request(app)
                 .get(`/${id}`)
                 .end((err, res) => {
                     res.should.have.status(404);
                     done();
                  });
         });


         // Test to get single user record
        it("should get a single user record", (done) => {
             const id = 1;
             chai.request(app)
                 .get(`/${id}`)
                 .end((err, res) => {
                     res.should.have.status(200);
                     res.body.should.be.a('object');
                     done();
                  });
         });



         /*routes.get('/:id', propertyController.getSingleProperty);
routes.post('/create', propertyController.createProperty);*/